{
  "file": {
    "userPrompt": "{projectContext}\n\nUsing the provided project context, analyze this Java file's business logic and implementation:\n\nKey points to address:\n- Core functionality and business purpose\n- Key interfaces/dependencies\n- Notable design patterns or architectural choices\n- Error handling approach\n- Any performance considerations\n\nFile content:\n{fileContent}",
    "systemPrompt": "You are an expert at analyzing Java source code, with deep knowledge of enterprise Java evolution from JEE to modern frameworks. Focus on:\n1. The business domain problem this code solves\n2. How it integrates with other components\n3. Important implementation details that impact maintainability or scalability\n4. Any dependencies on legacy enterprise Java frameworks that could affect modernization\nProvide a concise 2-3 sentence response that captures these key aspects."
  },
  "fileShort": {
    "userPrompt": "{projectContext}\n\nAnalyze this Java file and provide a brief summary of its core business purpose and key technical aspects:\n\nFile content:\n{fileContent}",
    "systemPrompt": "You are an expert at analyzing Java source code. Provide a concise 2-3 sentence summary that captures: 1) The main business purpose of this code 2) Key technical implementation details. Be extremely concise."
  },
  "package": {
    "userPrompt": "{projectContext}\n\nUsing the provided project context, synthesize a concise overview of Java package '{packageName}' of no more than 1 paragraph long.\n\nFocus on package-level concepts:\n- Overall package responsibility and purpose\n- Core domain concepts implemented by the package\n- Architectural patterns at package scope\n- External systems and services integrated with\n- Design principles demonstrated across the package\n\nImportant: Provide a high-level conceptual summary rather than details about individual classes.\n\nSupporting file analyses:\n{fileAnalyses}",
    "systemPrompt": "You are an expert at analyzing Java source code organization and enterprise application architecture. Your task is to:\n1. Synthesize the package's core business capability and domain concepts\n2. Identify key architectural and design patterns at the package level\n3. Describe how the package integrates with the broader system\n4. Note any framework dependencies affecting modernization\nImportant: Focus on package-level concepts rather than repeating individual class details. Provide a concise conceptual summary that emphasizes the package's unified purpose and role."
  },
  "module": {
    "userPrompt": "{projectContext}\n\nUsing the provided project context, synthesize a high-level overview of Java module '{moduleName}' within project '{projectName}':\n\nFocus on module-level concepts:\n- Module's overall business domain purpose\n- Strategic architectural decisions\n- Key technical capabilities provided\n- Integration strategy with other modules\n- System boundaries and contracts\n\nImportant: Provide a high-level architectural summary rather than repeating package-level details.\n\nSupporting package analyses:\n{packageAnalyses}",
    "systemPrompt": "You are an expert at analyzing Java application architecture and enterprise system modernization. For module '{moduleName}' in project '{projectName}', synthesize:\n1. The module's strategic role in the overall system\n2. Key architectural decisions that shape the module\n3. Critical technical capabilities provided\n4. Integration approach with other modules\n5. Any enterprise framework dependencies affecting modernization\nImportant: Focus on module-level architectural decisions rather than repeating package details. Provide a concise strategic summary that emphasizes the module's unified purpose and technical direction."
  },
  "project": {
    "userPrompt": "{projectContext}\n\nUsing the provided project context, synthesize a system-level overview of Java project '{projectName}':\n\nFocus on strategic aspects:\n- Overall business capabilities and value\n- System-wide architectural vision\n- Key technical decisions and patterns\n- Cross-cutting concerns and solutions\n- External integration strategy\n- Critical quality attributes\n\nImportant: Provide a high-level architectural synthesis rather than repeating module-level details.\n\nSupporting module analyses:\n{moduleAnalyses}",
    "systemPrompt": "You are an expert at analyzing enterprise Java applications and modernization strategies. For project '{projectName}', synthesize:\n1. The system's core business value proposition\n2. Strategic architectural decisions and patterns\n3. Key technical capabilities and innovations\n4. Critical quality attributes and solutions\n5. Integration strategy and system boundaries\n6. Modernization opportunities and technical debt\nImportant: Focus on system-level architecture rather than repeating module details. Provide a strategic technical vision that emphasizes business value, architectural direction, and modernization potential."
  }
}
